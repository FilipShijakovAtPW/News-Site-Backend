# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    foo.user.create_article_handler:
        class: App\Commanding\Handlers\CreateArticleCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\CreateArticleCommand }

    foo.user.edit_article_handler:
        class: App\Commanding\Handlers\EditArticleCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\EditArticleCommand }

    foo.user.change_published_state_article_handler:
        class: App\Commanding\Handlers\ChangePublishedStateForArticleCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\ChangePublishedStateForArticleCommandCommand }

    foo.user.confirm_user:
        class: App\Commanding\Handlers\ConfirmUserCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\ConfirmUserCommand }

    foo.user.create_user:
        class: App\Commanding\Handlers\CreateUserCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\CreateUserCommand }

    foo.user.assign_role_to_user:
        class: App\Commanding\Handlers\AssignRoleToUserCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\AssignRoleToUserCommand }

    foo.user.remove_role_from_user:
        class: App\Commanding\Handlers\RemoveRoleFromUserCommandHandler
        tags:
            - { name: tactician.handler, command: App\Commanding\Commands\RemoveRoleFromUserCommand }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
